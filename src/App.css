.buttons {
    display: flex;
    width: 380px;
    gap: 10px;
    --b: 5px;   /* the border thickness */
    --h: 1.8em; /* the height */
    scale: 0.5;
  }
  
  .buttons button {
    --_c: crimson;
    flex: calc(1.25 + var(--_s,0));
    min-width: 0;
    font-size: 40px;
    font-weight: bold;
    height: var(--h);
    cursor: pointer;
    color: var(--_c);
    border: var(--b) solid var(--_c);
    background: 
      conic-gradient(at calc(100% - 1.3*var(--b)) 0,var(--_c) 209deg, #0000 211deg) 
      border-box;
    clip-path: polygon(0 0,100% 0,calc(100% - 0.577*var(--h)) 100%,0 100%);
    padding: 0 calc(0.288*var(--h)) 0 0;
    margin: 0 calc(-0.288*var(--h)) 0 0;
    box-sizing: border-box;
    transition: flex .4s;
  }
  .buttons button + button {
    --_c: #0092CC;
    flex: calc(.75 + var(--_s,0));
    background: 
      conic-gradient(from -90deg at calc(1.3*var(--b)) 100%,var(--_c) 119deg, #0000 121deg) 
      border-box;
    clip-path: polygon(calc(0.577*var(--h)) 0,100% 0,100% 100%,0 100%);
    margin: 0 0 0 calc(-0.288*var(--h));
    padding: 0 0 0 calc(0.288*var(--h));
  }
  .buttons button:focus-visible {
    outline-offset: calc(-2*var(--b));
    outline: calc(var(--b)/2) solid #000;
    background: none;
    clip-path: none;
    margin: 0;
    padding: 0;
  }
  .buttons button:focus-visible + button {
    background: none;
    clip-path: none;
    margin: 0;
    padding: 0;
  }
  .buttons button:has(+ button:focus-visible) {
    background: none;
    clip-path: none;
    margin: 0;
    padding: 0;
  }
  button:hover,
  button:active:not(:focus-visible) {
    --_s: .75;
  }
  button:active {
    box-shadow: inset 0 0 0 100vmax var(--_c);
    color: #fff;
  }

#glow{
    text-transform: uppercase;
    
    -webkit-box-reflect: below 1px linear-gradient(transparent,#0004);
    line-height: 0.7rem;
    outline: none;
    animation: animate 5s linear infinite;
    
}

@keyframes animate {

    0%,18%,20%,50.1%,60%,65.1%,80%,90.1%,92%{
        color: #0e3742;
        text-shadow: none;
    }
    18.1%,20.1%,50%,60.1%,65%,80.1%,90%,92.1%,100%{
        color: #fff;
        text-shadow: 0 0 10px #03bcf4, 0 0 20px #03bcf4, 0 0 40px #03bcf4, 0 0 80px #03bcf4, 0 0 160px #03bcf4; 
    }

    
}

#back{
    background-image: url(wallpaperflare.com_wallpaper.jpg);
    background-size: cover;
}

.btn-23,
.btn-23 *,
.btn-23 :after,
.btn-23 :before,
.btn-23:after,
.btn-23:before {
  border: 0 solid;
  box-sizing: border-box;
}

.btn-23 {
  -webkit-tap-highlight-color: transparent;
  -webkit-appearance: button;
  background-color: #000;
  background-image: none;
  color: #fff;
  cursor: pointer;
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,
    Segoe UI, Roboto, Helvetica Neue, Arial, Noto Sans, sans-serif,
    Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
  font-size: 100%;
  font-weight: 900;
  line-height: 1.5;
  margin: 0;
  -webkit-mask-image: -webkit-radial-gradient(#000, #fff);
  padding: 0;
  text-transform: uppercase;
}

.btn-23:disabled {
  cursor: default;
}

.btn-23:-moz-focusring {
  outline: auto;
}

.btn-23 svg {
  display: block;
  vertical-align: middle;
}

.btn-23 [hidden] {
  display: none;
}

.btn-23 {
  border-radius: 99rem;
  border-width: 2px;
  overflow: hidden;
  padding: 0.8rem 3rem;
  position: relative;
}

.btn-23 span {
  display: grid;
  inset: 0;
  place-items: center;
  position: absolute;
  transition: opacity 0.2s ease;
}

.btn-23 .marquee {
  --spacing: 5em;
  --start: 0em;
  --end: 5em;
  -webkit-animation: marquee 1s linear infinite;
  animation: marquee 1s linear infinite;
  -webkit-animation-play-state: paused;
  animation-play-state: paused;
  opacity: 0;
  position: relative;
  text-shadow: #fff var(--spacing) 0, #fff calc(var(--spacing) * -1) 0,
    #fff calc(var(--spacing) * -2) 0;
}

.btn-23:hover .marquee {
  -webkit-animation-play-state: running;
  animation-play-state: running;
  opacity: 1;
}

.btn-23:hover .text {
  opacity: 0;
}

@-webkit-keyframes marquee {
  0% {
    transform: translateX(var(--start));
  }

  to {
    transform: translateX(var(--end));
  }
}

@keyframes marquee {
  0% {
    transform: translateX(var(--start));
  }

  to {
    transform: translateX(var(--end));
  }
}
